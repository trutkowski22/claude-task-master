```mermaid
flowchart TB
    subgraph Imports["Imports"]
        I1["IMPORT: fs, FROM: fs"]
        I2["IMPORT: path, FROM: path"]
        I3["IMPORT: readline, FROM: readline"]
        I4["IMPORT: fileURLToPath, FROM: url"]
        I5["IMPORT: dirname, FROM: path"]
        I6["IMPORT: chalk, FROM: chalk"]
        I7["IMPORT: figlet, FROM: figlet"]
        I8["IMPORT: boxen, FROM: boxen"]
        I9["IMPORT: gradient, FROM: gradient-string"]
        I10["IMPORT: isSilentMode, FROM: G:\claude-task-master\claude-task-master\scripts\modules\utils.js"]
        I11["IMPORT: insideGitWorkTree, FROM: G:\claude-task-master\claude-task-master\scripts\modules\utils\git-utils.js"]
        I12["IMPORT: manageGitignoreFile, FROM: G:\claude-task-master\claude-task-master\src\utils\manage-gitignore.js"]
        I13["IMPORT: RULE_PROFILES, FROM: G:\claude-task-master\claude-task-master\src\constants\profiles.js"]
        I14["IMPORT: convertAllRulesToProfileRules, FROM: G:\claude-task-master\claude-task-master\src\utils\rule-transformer.js"]
        I15["IMPORT: getRulesProfile, FROM: G:\claude-task-master\claude-task-master\src\utils\rule-transformer.js"]
        I16["IMPORT: updateConfigMaxTokens, FROM: G:\claude-task-master\claude-task-master\scripts\modules\update-config-tokens.js"]
        I17["IMPORT: execSync, FROM: child_process"]
        I18["IMPORT: EXAMPLE_PRD_FILE, FROM: G:\claude-task-master\claude-task-master\src\constants\paths.js"]
        I19["IMPORT: TASKMASTER_CONFIG_FILE, FROM: G:\claude-task-master\claude-task-master\src\constants\paths.js"]
        I20["IMPORT: TASKMASTER_TEMPLATES_DIR, FROM: G:\claude-task-master\claude-task-master\src\constants\paths.js"]
        I21["IMPORT: TASKMASTER_DIR, FROM: G:\claude-task-master\claude-task-master\src\constants\paths.js"]
        I22["IMPORT: TASKMASTER_TASKS_DIR, FROM: G:\claude-task-master\claude-task-master\src\constants\paths.js"]
        I23["IMPORT: TASKMASTER_DOCS_DIR, FROM: G:\claude-task-master\claude-task-master\src\constants\paths.js"]
        I24["IMPORT: TASKMASTER_REPORTS_DIR, FROM: G:\claude-task-master\claude-task-master\src\constants\paths.js"]
        I25["IMPORT: TASKMASTER_STATE_FILE, FROM: G:\claude-task-master\claude-task-master\src\constants\paths.js"]
        I26["IMPORT: ENV_EXAMPLE_FILE, FROM: G:\claude-task-master\claude-task-master\src\constants\paths.js"]
        I27["IMPORT: GITIGNORE_FILE, FROM: G:\claude-task-master\claude-task-master\src\constants\paths.js"]
    end
    
    subgraph Dependencies["Dependencies"]
        D1["DEP: Node.js file system for directory and file operations"]
        D2["DEP: Shell environment for executing Git and npm commands"]
        D3["DEP: Terminal interface for user interaction and colored output"]
    end
    
    subgraph FunctionsDefined["Functions Defined"]
        FU1["FUNCTION: displayBanner"]
        FU2["FUNCTION: log"]
        FU3["FUNCTION: ensureDirectoryExists"]
        FU4["FUNCTION: addShellAliases"]
        FU5["FUNCTION: createInitialStateFile"]
        FU6["FUNCTION: copyTemplateFile"]
        FU7["FUNCTION: initializeProject"]
        FU8["FUNCTION: promptQuestion"]
        FU9["FUNCTION: createProjectStructure"]
    end
    
    subgraph Exports["Exports"]
        E1["EXP: initializeProject"]
        E2["EXP: log"]
    end
    
    subgraph Constants["Const Declarations"]
        C1["CONST: __filename, VALUE: current file path using fileURLToPath"]
        C2["CONST: __dirname, VALUE: current directory path using dirname"]
        C3["CONST: LOG_LEVELS, VALUE: object mapping log level names to numeric priorities"]
        C4["CONST: LOG_LEVEL, VALUE: current logging threshold from environment or default"]
        C5["CONST: coolGradient, VALUE: blue color gradient for banner display"]
        C6["CONST: warmGradient, VALUE: orange/red color gradient for success messages"]
    end
    
    subgraph EnvironmentVariables["Environment Variables"]
        ENV1["ENV: TASKMASTER_LOG_LEVEL, USAGE: controls verbosity of logging output"]
        ENV2["ENV: DEBUG, USAGE: enables debug logging to file when set to 'true'"]
        ENV3["ENV: HOME, USAGE: user home directory for shell configuration files"]
        ENV4["ENV: USERPROFILE, USAGE: Windows user home directory alternative"]
        ENV5["ENV: SHELL, USAGE: determines which shell configuration file to modify"]
    end
    
    subgraph ExecutionFlow["Execution Flow"]
        FL1["Parse command line options and determine initialization mode"]
        FL2["Display colorful banner and welcome message unless in silent mode"]
        FL3["Handle boolean flags for aliases, git, and git-tasks configuration"]
        FL4["Determine rule profiles based on command line flags or prompts"]
        FL5["Either skip prompts with defaults or run interactive configuration"]
        FL6["Create complete project directory structure in target location"]
        FL7["Copy template files like config.json, .env.example, and .gitignore"]
        FL8["Initialize Git repository if requested and not already present"]
        FL9["Configure rule profiles, response language, and AI model settings"]
        FL10["Add shell aliases if requested for easier command access"]
        FL11["Display success message and next steps for project setup"]
    end
    
    subgraph initJs["init.js"]
        Imports
        Dependencies
        FunctionsDefined
        Exports
        Constants
        EnvironmentVariables
        ExecutionFlow
    end
    
    FL1 --> FL2
    FL2 --> FL3
    FL3 --> FL4
    FL4 --> FL5
    FL5 --> FL6
    FL6 --> FL7
    FL7 --> FL8
    FL8 --> FL9
    FL9 --> FL10
    FL10 --> FL11
```
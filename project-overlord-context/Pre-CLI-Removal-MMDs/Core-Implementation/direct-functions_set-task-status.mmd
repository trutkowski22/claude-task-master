flowchart TB
    subgraph setTaskStatusImports["direct-functions_set-task-status-Imports"]
        I1["IMPORT: setTaskStatus, FROM: /claude-task-master/scripts/modules/task-manager.js"]
        I2["IMPORT: enableSilentMode, FROM: /claude-task-master/scripts/modules/utils.js"]
        I3["IMPORT: disableSilentMode, FROM: /claude-task-master/scripts/modules/utils.js"]
        I4["IMPORT: isSilentMode, FROM: /claude-task-master/scripts/modules/utils.js"]
        I5["IMPORT: nextTaskDirect, FROM: ./next-task.js"]
    end
    
    subgraph setTaskStatusDependencies["direct-functions_set-task-status-Dependencies"]
        D1["DEP: FastMCP"]
        D2["DEP: File system"]
        D3["DEP: Next task retrieval"]
    end
    
    subgraph setTaskStatusFunctionsDefined["direct-functions_set-task-status-Functions Defined"]
        FU1["FUNCTION: setTaskStatusDirect"]
    end
    
    subgraph setTaskStatusExports["direct-functions_set-task-status-Exports"]
        E1["EXP: setTaskStatusDirect"]
    end
    
    subgraph setTaskStatusParameters["direct-functions_set-task-status-Parameters"]
        P1["PARAM: {Object} args - Function arguments"]
        P2["PARAM: {string} args.id - The ID of the task to update"]
        P3["PARAM: {string} args.status - The new status to set for the task"]
        P4["PARAM: {string} args.tasksJsonPath - Path to the tasks.json file"]
        P5["PARAM: {string} args.complexityReportPath - Path to complexity report"]
        P6["PARAM: {string} args.projectRoot - Project root path"]
        P7["PARAM: {string} args.tag - Tag for the task (optional)"]
        P8["PARAM: {Object} log - Logger object"]
        P9["PARAM: {Object} context - Additional context containing session"]
    end
    
    subgraph setTaskStatusConstants["direct-functions_set-task-status-Const Declarations"]
        C1["CONST: tasksJsonPath, VALUE: extracted from args"]
        C2["CONST: id, VALUE: extracted from args"]
        C3["CONST: status, VALUE: extracted from args"]
        C4["CONST: complexityReportPath, VALUE: extracted from args"]
        C5["CONST: projectRoot, VALUE: extracted from args"]
        C6["CONST: tag, VALUE: extracted from args"]
        C7["CONST: session, VALUE: extracted from context"]
        C8["CONST: tasksPath, VALUE: tasksJsonPath"]
        C9["CONST: taskId, VALUE: id"]
        C10["CONST: newStatus, VALUE: status"]
        C11["CONST: result, VALUE: success result object"]
        C12["CONST: nextResult, VALUE: nextTaskDirect execution result"]
    end
    
    subgraph setTaskStatusExecutionFlow["direct-functions_set-task-status-Execution Flow"]
        FL1["Destructure function arguments and extract session from context"]
        FL2["Log function call with arguments for debugging"]
        FL3["Validate required tasksJsonPath parameter is provided"]
        FL4["Validate required id parameter is provided"]
        FL5["Validate required status parameter is provided"]
        FL6["Prepare task ID and new status variables"]
        FL7["Log the task status update operation details"]
        FL8["Enable silent mode to suppress console output"]
        FL9["Call core setTaskStatus function with formatted parameters"]
        FL10["Log successful status update"]
        FL11["Check if task was marked as done and fetch next task"]
        FL12["Disable silent mode in finally block"]
        FL13["Handle errors and ensure silent mode is disabled in catch blocks"]
    end
    
    subgraph setTaskStatus["direct-functions_set-task-status.js"]
        setTaskStatusImports
        setTaskStatusDependencies
        setTaskStatusFunctionsDefined
        setTaskStatusExports
        setTaskStatusParameters
        setTaskStatusConstants
        setTaskStatusExecutionFlow
    end
    
    FL1 --> FL2
    FL2 --> FL3
    FL3 --> FL4
    FL4 --> FL5
    FL5 --> FL6
    FL6 --> FL7
    FL7 --> FL8
    FL8 --> FL9
    FL9 --> FL10
    FL10 --> FL11
    FL11 --> FL12
    FL12 --> FL13
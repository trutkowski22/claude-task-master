flowchart TB
    subgraph mcpProviderImports["providers_mcp-provider-Imports"]
        I1["IMPORT: createMCP, FROM: /claude-task-master/mcp-server/src/custom-sdk/index.js"]
        I2["IMPORT: BaseAIProvider, FROM: /claude-task-master/src/ai-providers/base-provider.js"]
    end
    
    subgraph mcpProviderDependencies["providers_mcp-provider-Dependencies"]
        D1["DEP: MCP session management"]
        D2["DEP: AI SDK compatibility layer"]
    end
    
    subgraph mcpProviderFunctionsDefined["providers_mcp-provider-Functions Defined"]
        FU1["FUNCTION: constructor"]
        FU2["FUNCTION: getRequiredApiKeyName"]
        FU3["FUNCTION: isRequiredApiKey"]
        FU4["FUNCTION: validateAuth"]
        FU5["FUNCTION: getClient"]
        FU6["FUNCTION: setSession"]
        FU7["FUNCTION: hasValidSession"]
    end
    
    subgraph mcpProviderExports["providers_mcp-provider-Exports"]
        E1["EXP: MCPProvider"]
    end
    
    subgraph mcpProviderParameters["providers_mcp-provider-Parameters"]
        P1["PARAM: {object} params - Parameters to validate"]
        P2["PARAM: {object} params - Parameters for client initialization"]
        P3["PARAM: {object} session - MCP session object"]
    end
    
    subgraph mcpProviderConstants["providers_mcp-provider-Const Declarations"]
        C1["CONST: name, VALUE: 'mcp'"]
        C2["CONST: session, VALUE: null initially"]
    end
    
    subgraph mcpProviderExecutionFlow["providers_mcp-provider-Execution Flow"]
        FL1["Initialize MCPProvider class extending BaseAIProvider"]
        FL2["Set provider name to 'mcp' and initialize session as null"]
        FL3["Return 'MCP_API_KEY' as required API key name"]
        FL4["Return false for API key requirement check"]
        FL5["Validate MCP session exists and has sampling capabilities"]
        FL6["Create MCP AI SDK client with session and default settings"]
        FL7["Update provider session on MCP server connect events"]
        FL8["Check session validity and sampling capability status"]
        FL9["Handle errors during client initialization with base provider error handling"]
    end
    
    subgraph mcpProvider["providers_mcp-provider.js"]
        mcpProviderImports
        mcpProviderDependencies
        mcpProviderFunctionsDefined
        mcpProviderExports
        mcpProviderParameters
        mcpProviderConstants
        mcpProviderExecutionFlow
    end
    
    FL1 --> FL2
    FL2 --> FL3
    FL3 --> FL4
    FL4 --> FL5
    FL5 --> FL6
    FL6 --> FL7
    FL7 --> FL8
    FL8 --> FL9
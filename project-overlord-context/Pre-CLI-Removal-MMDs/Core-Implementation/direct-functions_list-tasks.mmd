flowchart TB
    subgraph listTasks-Imports["listTasks-Imports"]
        I1["IMPORT: listTasks, FROM: /claude-task-master/scripts/modules/task-manager.js"]
        I2["IMPORT: enableSilentMode, FROM: /claude-task-master/scripts/modules/utils.js"]
        I3["IMPORT: disableSilentMode, FROM: /claude-task-master/scripts/modules/utils.js"]
    end
    subgraph listTasks-FunctionsDefined["listTasks-Functions Defined"]
        FU1["FUNCTION: listTasksDirect"]
        FU2["FUNCTION: coreListTasksAction (async inner function)"]
    end
    subgraph listTasks-Exports["listTasks-Exports"]
        E1["EXP: listTasksDirect"]
    end
    subgraph listTasks-Parameters["listTasks-Parameters"]
        P1["PARAM: {Object} args - Command arguments (now expecting tasksJsonPath explicitly)"]
        P2["PARAM: {string} args.tasksJsonPath - Path to the tasks.json file"]
        P3["PARAM: {string} args.reportPath - Path to the report file"]
        P4["PARAM: {string} args.status - Status of the task"]
        P5["PARAM: {boolean} args.withSubtasks - Whether to include subtasks"]
        P6["PARAM: {string} args.projectRoot - Project root path (for MCP/env fallback)"]
        P7["PARAM: {string} args.tag - Tag for the task (optional)"]
        P8["PARAM: {Object} log - Logger object"]
    end
    subgraph listTasks-Constants["listTasks-ConstDeclarations"]
        C1["CONST: tasksJsonPath, VALUE: args destructuring"]
        C2["CONST: reportPath, VALUE: args destructuring"]
        C3["CONST: status, VALUE: args destructuring"]
        C4["CONST: withSubtasks, VALUE: args destructuring"]
        C5["CONST: projectRoot, VALUE: args destructuring"]
        C6["CONST: tag, VALUE: args destructuring"]
        C7["CONST: session, VALUE: context destructuring"]
        C8["CONST: statusFilter, VALUE: status or 'all' default"]
        C9["CONST: withSubtasksFilter, VALUE: withSubtasks or false default"]
        C10["CONST: coreListTasksAction, VALUE: async function for core operation"]
        C11["CONST: resultData, VALUE: listTasks function result"]
        C12["CONST: result, VALUE: coreListTasksAction execution result"]
    end
    subgraph listTasks-ExecutionFlow["listTasks-Execution Flow"]
        FL1["Destructure arguments and session from context"]
        FL2["Validate tasksJsonPath is provided"]
        FL3["Set status and subtasks filters with defaults"]
        FL4["Define coreListTasksAction async function"]
        FL5["Enable silent mode to prevent console interference"]
        FL6["Log core function execution details"]
        FL7["Call listTasks core function with all parameters"]
        FL8["Validate core function response contains tasks"]
        FL9["Log number of retrieved tasks"]
        FL10["Disable silent mode to restore normal logging"]
        FL11["Return success response with task data"]
        FL12["Execute coreListTasksAction and capture result"]
        FL13["Log completion of operation"]
        FL14["Return final result from core action"]
        FL15["Handle errors by restoring logging and returning error response"]
    end
    subgraph listTasks["list-tasks.js"]
        listTasks-Imports
        listTasks-FunctionsDefined
        listTasks-Exports
        listTasks-Parameters
        listTasks-Constants
        listTasks-ExecutionFlow
    end
    FL1 --> FL2
    FL2 --> FL3
    FL3 --> FL4
    FL4 --> FL5
    FL5 --> FL6
    FL6 --> FL7
    FL7 --> FL8
    FL8 --> FL9
    FL9 --> FL10
    FL10 --> FL11
    FL11 --> FL12
    FL12 --> FL13
    FL13 --> FL14
    FL14 --> FL15
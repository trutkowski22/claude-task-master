```mermaid
flowchart TB
    subgraph Imports["Imports"]
        I1["IMPORT: z, FROM: zod"]
        I2["IMPORT: handleApiResult, FROM: /claude-task-master/mcp-server/src/tools/utils.js"]
        I3["IMPORT: createErrorResponse, FROM: /claude-task-master/mcp-server/src/tools/utils.js"]
        I4["IMPORT: withNormalizedProjectRoot, FROM: /claude-task-master/mcp-server/src/tools/utils.js"]
        I5["IMPORT: complexityReportDirect, FROM: /claude-task-master/mcp-server/src/core/task-master-core.js"]
        I6["IMPORT: COMPLEXITY_REPORT_FILE, FROM: /claude-task-master/src/constants/paths.js"]
        I7["IMPORT: findComplexityReportPath, FROM: /claude-task-master/mcp-server/src/core/utils/path-utils.js"]
        I8["IMPORT: getCurrentTag, FROM: /claude-task-master/scripts/modules/utils.js"]
    end
    
    subgraph Dependencies["Dependencies"]
        D1["DEP: FastMCP server framework for tool registration"]
        D2["DEP: Zod validation library for parameter schemas"]
        D3["DEP: File system for reading complexity report files"]
    end
    
    subgraph FunctionsDefined["Functions Defined"]
        FU1["FUNCTION: registerComplexityReportTool"]
    end
    
    subgraph Exports["Exports"]
        E1["EXP: registerComplexityReportTool"]
    end
    
    subgraph Parameters["Parameters"]
        P1["PARAM: {Object} server - FastMCP server instance for registering the complexity report tool"]
    end
    
    subgraph Constants["Const Declarations"]
        C1["CONST: resolvedTag, VALUE: current tag context from project root"]
        C2["CONST: pathArgs, VALUE: object containing project root, file path, and tag for path resolution"]
        C3["CONST: reportPath, VALUE: path to complexity report file found using findComplexityReportPath"]
        C4["CONST: result, VALUE: result from complexityReportDirect function execution"]
    end
    
    subgraph ExecutionFlow["Execution Flow"]
        FL1["Register complexity_report tool with server using name and description"]
        FL2["Get current tag context and build path arguments object"]
        FL3["Find complexity report file path using path utilities"]
        FL4["Execute complexityReportDirect function to read and format report"]
        FL5["Return formatted API result with report data or error information"]
    end
    
    subgraph complexityReport["complexity-report.js"]
        Imports
        Dependencies
        FunctionsDefined
        Exports
        Parameters
        Constants
        ExecutionFlow
    end
    
    FL1 --> FL2
    FL2 --> FL3
    FL3 --> FL4
    FL4 --> FL5
```
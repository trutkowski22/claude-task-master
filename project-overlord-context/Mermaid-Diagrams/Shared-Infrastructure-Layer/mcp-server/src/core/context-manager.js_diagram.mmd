flowchart TB
    subgraph Imports["Imports"]
        I1["IMPORT: FastMCP, FROM: fastmcp"]
        I2["IMPORT: LRUCache, FROM: lru-cache"]
    end
    
    subgraph Dependencies["Dependencies"]
        D1["DEP: fastmcp for MCP server functionality"]
        D2["DEP: lru-cache for efficient caching with TTL support"]
        D3["DEP: Node.js built-in Date for timestamp handling"]
        D4["DEP: JSON for metadata serialization in cache keys"]
    end
    
    subgraph Classes["Classes Defined"]
        CL1["CLASS: ContextManager"]
    end
    
    subgraph FunctionsDefined["Functions Defined"]
        FU1["FUNCTION: constructor"]
        FU2["FUNCTION: getContext"]
        FU3["FUNCTION: updateContext"]
        FU4["FUNCTION: invalidateContext"]
        FU5["FUNCTION: getCachedData"]
        FU6["FUNCTION: setCachedData"]
        FU7["FUNCTION: invalidateCacheKey"]
        FU8["FUNCTION: getStats"]
        FU9["FUNCTION: _getCacheKey (private, deprecated)"]
    end
    
    subgraph Exports["Exports"]
        E1["EXP: ContextManager - Main context management class"]
        E2["EXP: contextManager - Singleton instance with default config"]
    end
    
    subgraph Parameters["Parameters"]
        P1["PARAM: {ContextManagerConfig} config - Configuration options"]
        P2["PARAM: {number} config.maxCacheSize - Maximum cache items (default: 1000)"]
        P3["PARAM: {number} config.ttl - Time to live in ms (default: 5 minutes)"]
        P4["PARAM: {number} config.maxContextSize - Max context tokens (default: 4000)"]
        P5["PARAM: {string} contextId - Unique identifier for context"]
        P6["PARAM: {Object} metadata - Additional context metadata"]
        P7["PARAM: {Object} updates - Updates to apply to context"]
        P8["PARAM: {string} key - Cache key for data operations"]
        P9["PARAM: {any} data - Data to cache"]
    end
    
    subgraph Constants["Const Declarations"]
        C1["CONST: config, VALUE: merged configuration with defaults"]
        C2["CONST: cache, VALUE: LRUCache instance with TTL support"]
        C3["CONST: stats, VALUE: tracking object for hits, misses, invalidations"]
        C4["CONST: contextManager, VALUE: singleton instance with default config"]
    end
    
    subgraph Properties["Properties"]
        PR1["PROP: config.maxCacheSize - Maximum number of cached items"]
        PR2["PROP: config.ttl - Time to live for cached items"]
        PR3["PROP: config.maxContextSize - Maximum context window size"]
        PR4["PROP: cache - LRU cache instance with updateAgeOnGet"]
        PR5["PROP: stats.hits - Cache hit counter"]
        PR6["PROP: stats.misses - Cache miss counter"]
        PR7["PROP: stats.invalidations - Cache invalidation counter"]
    end
    
    subgraph ExecutionFlow["Execution Flow"]
        FL1["Initialize ContextManager with configuration defaults"]
        FL2["Create LRU cache with max size, TTL, and age update on get"]
        FL3["Initialize statistics tracking for cache performance"]
        FL4["Implement context retrieval with cache-first strategy"]
        FL5["Create new contexts with metadata and timestamp when cache misses"]
        FL6["Support context updates with automatic cache synchronization"]
        FL7["Provide context and cache key invalidation capabilities"]
        FL8["Track cache statistics for performance monitoring"]
        FL9["Generate cache keys from context ID and metadata JSON"]
        FL10["Export singleton instance for global context management"]
    end
    
    subgraph Methods["Method Behaviors"]
        M1["getContext: Cache-first retrieval with context creation on miss"]
        M2["updateContext: Apply updates and refresh cache"]
        M3["invalidateContext: Remove specific context from cache"]
        M4["getCachedData: Direct cache access with stats tracking"]
        M5["setCachedData: Direct cache storage"]
        M6["invalidateCacheKey: Direct cache key removal"]
        M7["getStats: Return cache performance metrics"]
        M8["_getCacheKey: Generate cache key (deprecated for external use)"]
    end
    
    subgraph contextManager["context-manager.js"]
        Imports
        Dependencies
        Classes
        FunctionsDefined
        Exports
        Parameters
        Constants
        Properties
        ExecutionFlow
        Methods
    end
    
    FL1 --> FL2
    FL2 --> FL3
    FL3 --> FL4
    FL4 --> FL5
    FL5 --> FL6
    FL6 --> FL7
    FL7 --> FL8
    FL8 --> FL9
    FL9 --> FL10
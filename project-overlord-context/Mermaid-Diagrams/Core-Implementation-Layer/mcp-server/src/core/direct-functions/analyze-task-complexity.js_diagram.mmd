```mermaid
flowchart TB
    subgraph Imports["Imports"]
        I1["IMPORT: ../../../../scripts/modules/task-manager/analyze-task-complexity.js, FROM: /claude-task-master/scripts/modules/task-manager/analyze-task-complexity.js"]
        I2["IMPORT: fs, FROM: fs"]
        I3["IMPORT: ../../tools/utils.js, FROM: /claude-task-master/mcp-server/src/tools/utils.js"]
    end
    subgraph Dependencies["Dependencies"]
        D1["DEP: File system"]
        D2["DEP: Path resolution"]
    end
    subgraph FunctionsDefined["Functions Defined"]
        FU1["FUNCTION: analyzeTaskComplexityDirect"]
    end
    subgraph Parameters["Parameters"]
        P1["PARAM: {Object} args - Function arguments"]
        P2["PARAM: {string} args.tasksJsonPath - Explicit path to the tasks.json file."]
        P3["PARAM: {string} args.outputPath - Explicit absolute path to save the report."]
        P4["PARAM: {string|number} [args.threshold] - Minimum complexity score to recommend expansion (1-10)"]
        P5["PARAM: {boolean} [args.research] - Use Perplexity AI for research-backed complexity analysis"]
        P6["PARAM: {string} [args.ids] - Comma-separated list of task IDs to analyze"]
        P7["PARAM: {number} [args.from] - Starting task ID in a range to analyze"]
        P8["PARAM: {number} [args.to] - Ending task ID in a range to analyze"]
        P9["PARAM: {string} [args.projectRoot] - Project root path."]
        P10["PARAM: {string} [args.tag] - Tag for the task (optional)"]
        P11["PARAM: {Object} log - Logger object"]
        P12["PARAM: {Object} [context.session] - MCP session object"]
    end
    subgraph Constants["Const Declarations"]
        C1["CONST: logWrapper, VALUE: createLogWrapper(log)"]
        C2["CONST: tasksPath, VALUE: tasksJsonPath"]
        C3["CONST: resolvedOutputPath, VALUE: outputPath"]
        C4["CONST: fromStr, VALUE: from !== undefined ? from : 'first'"]
        C5["CONST: toStr, VALUE: to !== undefined ? to : 'last'"]
        C6["CONST: coreOptions, VALUE: {"]
        C7["CONST: wasSilent, VALUE: isSilentMode()"]
        C8["CONST: analysisArray, VALUE: Array.isArray(coreResult.report.complexityAnalysis)"]
        C9["CONST: highComplexityTasks, VALUE: analysisArray.filter("]
        C10["CONST: mediumComplexityTasks, VALUE: analysisArray.filter("]
        C11["CONST: lowComplexityTasks, VALUE: analysisArray.filter("]
    end
    subgraph ExecutionFlow["Execution Flow"]
        FL1["Identify and load dependencies and modules"]
        FL2["Define functions and core logic for this module"]
    end
    subgraph FileName["analyze-task-complexity.js"]
        Imports
        Dependencies
        FunctionsDefined
        Parameters
        Constants
        ExecutionFlow
    end
    FL1 --> FL2
```
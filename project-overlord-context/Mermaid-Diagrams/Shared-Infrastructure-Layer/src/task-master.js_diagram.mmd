flowchart TB
    subgraph Imports["Imports"]
        I1["IMPORT: path, FROM: path"]
        I2["IMPORT: fs, FROM: fs"]
        I3["IMPORT: TASKMASTER_DIR, FROM: G:\claude-task-master\claude-task-master\src\constants\paths.js"]
        I4["IMPORT: TASKMASTER_TASKS_FILE, FROM: G:\claude-task-master\claude-task-master\src\constants\paths.js"]
        I5["IMPORT: LEGACY_TASKS_FILE, FROM: G:\claude-task-master\claude-task-master\src\constants\paths.js"]
        I6["IMPORT: TASKMASTER_DOCS_DIR, FROM: G:\claude-task-master\claude-task-master\src\constants\paths.js"]
        I7["IMPORT: TASKMASTER_REPORTS_DIR, FROM: G:\claude-task-master\claude-task-master\src\constants\paths.js"]
        I8["IMPORT: TASKMASTER_CONFIG_FILE, FROM: G:\claude-task-master\claude-task-master\src\constants\paths.js"]
        I9["IMPORT: LEGACY_CONFIG_FILE, FROM: G:\claude-task-master\claude-task-master\src\constants\paths.js"]
        I10["IMPORT: COMPLEXITY_REPORT_FILE, FROM: G:\claude-task-master\claude-task-master\src\constants\paths.js"]
        I11["IMPORT: findProjectRoot, FROM: G:\claude-task-master\claude-task-master\src\utils\path-utils.js"]
    end
    
    subgraph Dependencies["Dependencies"]
        D1["DEP: Node.js path module for file path operations"]
        D2["DEP: Node.js fs module for file system operations"]
    end
    
    subgraph FunctionsDefined["Functions Defined"]
        FU1["FUNCTION: constructor"]
        FU2["FUNCTION: getProjectRoot"]
        FU3["FUNCTION: getTaskMasterDir"]
        FU4["FUNCTION: getTasksPath"]
        FU5["FUNCTION: getPrdPath"]
        FU6["FUNCTION: getComplexityReportPath"]
        FU7["FUNCTION: getConfigPath"]
        FU8["FUNCTION: getStatePath"]
        FU9["FUNCTION: getAllPaths"]
        FU10["FUNCTION: getCurrentTag"]
        FU11["FUNCTION: initTaskMaster"]
        FU12["FUNCTION: resolvePath"]
    end
    
    subgraph Exports["Exports"]
        E1["EXP: TaskMaster"]
        E2["EXP: initTaskMaster"]
    end
    
    subgraph Parameters["Parameters"]
        P1["PARAM: {object} paths - A pre-resolved object of all application paths"]
        P2["PARAM: {string|undefined} tag - The current tag"]
        P3["PARAM: {object} [overrides={}] - An object with possible path overrides"]
        P4["PARAM: {string} [overrides.projectRoot]"]
        P5["PARAM: {string} [overrides.tasksPath]"]
        P6["PARAM: {string} [overrides.prdPath]"]
        P7["PARAM: {string} [overrides.complexityReportPath]"]
        P8["PARAM: {string} [overrides.configPath]"]
        P9["PARAM: {string} [overrides.statePath]"]
        P10["PARAM: {string} [overrides.tag]"]
    end
    
    subgraph Constants["Const Declarations"]
        C1["CONST: resolvePath, VALUE: function for resolving and validating file paths"]
        C2["CONST: paths, VALUE: object containing all resolved application paths"]
    end
    
    subgraph ExecutionFlow["Execution Flow"]
        FL1["Initialize TaskMaster class with centralized path management"]
        FL2["Resolve project root using override or auto-detection via findProjectRoot"]
        FL3["Validate and resolve TaskMaster directory location"]
        FL4["Set default paths for configuration, state, and tasks files"]
        FL5["Process path overrides with validation and error handling"]
        FL6["Create parent directories for output paths when needed"]
        FL7["Return initialized TaskMaster instance with frozen paths object"]
    end
    
    subgraph taskMaster["task-master.js"]
        Imports
        Dependencies
        FunctionsDefined
        Exports
        Parameters
        Constants
        ExecutionFlow
    end
    
    FL1 --> FL2
    FL2 --> FL3
    FL3 --> FL4
    FL4 --> FL5
    FL5 --> FL6
    FL6 --> FL7
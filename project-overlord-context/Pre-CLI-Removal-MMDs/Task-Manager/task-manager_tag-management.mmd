flowchart TB
    subgraph tagManagement-Imports["tagManagement-Imports"]
        I1["IMPORT: path, FROM: path"]
        I2["IMPORT: fs, FROM: fs"]
        I7["IMPORT: log, readJSON, writeJSON, getCurrentTag, resolveTag, getTasksForTag, setTasksForTag, findProjectRoot, truncate, FROM: /claude-task-master/scripts/modules/utils.js"]
        I9["IMPORT: findNextTask, FROM: /claude-task-master/scripts/modules/task-manager/find-next-task.js"]
    end
    subgraph tagManagement-FunctionsDefined["tagManagement-Functions Defined"]
        FU1["FUNCTION: createTag"]
        FU2["FUNCTION: deleteTag"]
        FU3["FUNCTION: enhanceTagsWithMetadata"]
        FU4["FUNCTION: tags"]
        FU5["FUNCTION: useTag"]
        FU6["FUNCTION: renameTag"]
        FU7["FUNCTION: copyTag"]
        FU8["FUNCTION: switchCurrentTag"]
        FU9["FUNCTION: updateBranchTagMapping"]
        FU10["FUNCTION: getTagForBranch"]
        FU11["FUNCTION: createTagFromBranch"]
        FU12["FUNCTION: autoSwitchTagForBranch"]
        FU13["FUNCTION: checkAndAutoSwitchTag"]
    end
    subgraph tagManagement-Exports["tagManagement-Exports"]
        E1["EXP: createTag"]
        E2["EXP: deleteTag"]
        E3["EXP: tags"]
        E4["EXP: useTag"]
        E5["EXP: renameTag"]
        E6["EXP: copyTag"]
        E7["EXP: switchCurrentTag"]
        E8["EXP: updateBranchTagMapping"]
        E9["EXP: getTagForBranch"]
        E10["EXP: createTagFromBranch"]
        E11["EXP: autoSwitchTagForBranch"]
        E12["EXP: checkAndAutoSwitchTag"]
    end
    subgraph tagManagement-Parameters["tagManagement-Parameters"]
        P1["PARAM: {string} tasksPath - Path to the tasks.json file"]
        P2["PARAM: {string} tagName - Name of the new tag to create"]
        P3["PARAM: {Object} options - Options object"]
        P4["PARAM: {boolean} [options.copyFromCurrent=false] - Whether to copy tasks from current tag"]
        P5["PARAM: {string} [options.copyFromTag] - Specific tag to copy tasks from"]
        P6["PARAM: {string} [options.description] - Optional description for the tag"]
        P7["PARAM: {Object} context - Context object containing session and projectRoot"]
        P8["PARAM: {string} [context.projectRoot] - Project root path"]
        P9["PARAM: {Object} [context.mcpLog] - MCP logger object (optional)"]
        P10["PARAM: {string} outputFormat - Output format (text or json)"]
        P11["PARAM: {boolean} [options.yes=false] - Skip confirmation prompts"]
        P12["PARAM: {string} oldName - Current name of the tag"]
        P13["PARAM: {string} newName - New name for the tag"]
        P14["PARAM: {string} sourceName - Name of the source tag to copy from"]
        P15["PARAM: {string} targetName - Name of the new tag to create"]
        P16["PARAM: {string} projectRoot - Project root directory"]
        P17["PARAM: {string} branchName - Git branch name"]
        P18["PARAM: {boolean} [options.showTaskCounts=true] - Whether to show task counts"]
        P19["PARAM: {boolean} [options.showMetadata=false] - Whether to show metadata"]
        P20["PARAM: {Object} rawData - The raw tagged data"]
        P21["PARAM: {boolean} [options.createIfMissing] - Create tag if it doesn't exist"]
        P22["PARAM: {boolean} [options.copyFromCurrent] - Copy tasks when creating new tag"]
    end
    subgraph tagManagement-Constants["tagManagement-Const Declarations"]
        C1["CONST: mcpLog, VALUE: mcpLog or default logger object"]
        C2["CONST: logFn, VALUE: mcpLog or default logging functions"]
        C3["CONST: reservedNames, VALUE: ['master', 'main', 'default']"]
        C4["CONST: data, VALUE: readJSON(tasksPath, projectRoot)"]
        C5["CONST: rawData, VALUE: data._rawTaggedData or processed data"]
        C6["CONST: sourceTasks, VALUE: array of tasks from source tag"]
        C7["CONST: cleanData, VALUE: sanitized data for writing"]
        C8["CONST: currentTag, VALUE: getCurrentTag(projectRoot)"]
        C9["CONST: isCurrentTag, VALUE: currentTag === tagName"]
        C10["CONST: taskCount, VALUE: tasks.length"]
        C11["CONST: tagList, VALUE: array of tag objects"]
        C12["CONST: nextTask, VALUE: findNextTask(tasks)"]
        C13["CONST: statePath, VALUE: path.join(projectRoot, '.taskmaster', 'state.json')"]
        C14["CONST: state, VALUE: parsed state JSON or default object"]
        C15["CONST: fileCreatedDate, VALUE: file system stats creation date"]
        C16["CONST: configPath, VALUE: path.join(projectRoot, '.taskmaster', 'config.json')"]
    end
    subgraph tagManagement-ExecutionFlow["tagManagement-Execution Flow"]
        FL1["Validate input parameters and tag name format"]
        FL2["Create consistent logger object for MCP or default logging"]
        FL3["Read and parse tasks.json file using readJSON utility"]
        FL4["Extract or create raw tagged data structure from file"]
        FL5["Check for tag existence conflicts and reserved names"]
        FL6["Determine source tasks for copying based on options"]
        FL7["Create new tag structure with metadata and task arrays"]
        FL8["Write clean data back to file excluding internal fields"]
        FL9["Display success messages in text or JSON format"]
        FL10["Handle tag deletion with double confirmation prompts"]
        FL11["Update current tag reference when deleting active tag"]
        FL12["Enhance existing tags with missing metadata fields"]
        FL13["List all available tags with task counts and metadata"]
        FL14["Switch current tag context and update state.json"]
        FL15["Find next eligible task in switched tag context"]
        FL16["Rename tag by copying data and updating references"]
        FL17["Copy tag with deep clone of tasks and new metadata"]
        FL18["Update branch-tag mapping in state.json file"]
        FL19["Create tag from git branch with sanitized name"]
        FL20["Auto-switch tag based on current git branch"]
        FL21["Check git workflow configuration for auto-switching"]
    end
    subgraph tagManagement["tag-management.js"]
        tagManagement-Imports
        tagManagement-FunctionsDefined
        tagManagement-Exports
        tagManagement-Parameters
        tagManagement-Constants
        tagManagement-ExecutionFlow
    end
    FL1 --> FL2
    FL2 --> FL3
    FL3 --> FL4
    FL4 --> FL5
    FL5 --> FL6
    FL6 --> FL7
    FL7 --> FL8
    FL8 --> FL9
    FL9 --> FL10
    FL10 --> FL11
    FL11 --> FL12
    FL12 --> FL13
    FL13 --> FL14
    FL14 --> FL15
    FL15 --> FL16
    FL16 --> FL17
    FL17 --> FL18
    FL18 --> FL19
    FL19 --> FL20
    FL20 --> FL21
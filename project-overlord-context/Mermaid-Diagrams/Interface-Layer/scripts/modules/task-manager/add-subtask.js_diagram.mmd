flowchart TB
    subgraph Imports["Imports"]
        I1["IMPORT: path, FROM: path"]
        I2["IMPORT: log, readJSON, writeJSON, getCurrentTag, FROM: /claude-task-master/claude-task-master/scripts/modules/utils.js"]
        I3["IMPORT: isTaskDependentOn, FROM: /claude-task-master/claude-task-master/scripts/modules/task-manager.js"]
        I4["IMPORT: generateTaskFiles, FROM: /claude-task-master/claude-task-master/scripts/modules/task-manager/generate-task-files.js"]
    end
    
    subgraph FunctionsDefined["Functions Defined"]
        FU1["FUNCTION: addSubtask"]
    end
    
    subgraph Exports["Exports"]
        E1["EXP: addSubtask"]
    end
    
    subgraph Parameters["Parameters"]
        P1["PARAM: {string} tasksPath - Path to the tasks.json file"]
        P2["PARAM: {number|string} parentId - ID of the parent task"]
        P3["PARAM: {number|string|null} existingTaskId - ID of an existing task to convert to subtask (optional)"]
        P4["PARAM: {Object} newSubtaskData - Data for creating a new subtask (used if existingTaskId is null)"]
        P5["PARAM: {boolean} generateFiles - Whether to regenerate task files after adding the subtask"]
        P6["PARAM: {Object} context - Context object containing projectRoot and tag information"]
        P7["PARAM: {string} context.projectRoot - Project root path"]
        P8["PARAM: {string} context.tag - Tag for the task"]
    end
    
    subgraph Constants["Const Declarations"]
        C1["CONST: projectRoot, VALUE: extracted from context parameter"]
        C2["CONST: tag, VALUE: extracted from context parameter"]
        C3["CONST: data, VALUE: readJSON result from tasks file"]
        C4["CONST: parentIdNum, VALUE: parseInt result of parentId"]
        C5["CONST: parentTask, VALUE: found parent task from data.tasks array"]
        C6["CONST: newSubtask, VALUE: newly created or converted subtask object"]
        C7["CONST: highestSubtaskId, VALUE: highest existing subtask ID for generating new ID"]
        C8["CONST: newSubtaskId, VALUE: next sequential subtask ID"]
    end
    
    subgraph ExecutionFlow["Execution Flow"]
        FL1["Read existing tasks from JSON file using project context"]
        FL2["Validate tasks file contains valid data structure"]
        FL3["Convert parent ID to number and find parent task"]
        FL4["Initialize subtasks array on parent task if not exists"]
        FL5["Branch: Convert existing task OR create new subtask"]
        FL6["For existing task: Validate not already subtask, check circular dependencies"]
        FL7["For new subtask: Create subtask object with provided data"]
        FL8["Calculate next sequential subtask ID within parent"]
        FL9["Add subtask to parent task's subtasks array"]
        FL10["Write updated tasks back to JSON file"]
        FL11["Optionally regenerate task files if requested"]
        FL12["Return the newly created or converted subtask object"]
    end
    
    subgraph addSubtaskJs["add-subtask.js"]
        Imports
        FunctionsDefined
        Exports
        Parameters
        Constants
        ExecutionFlow
    end
    
    FL1 --> FL2
    FL2 --> FL3
    FL3 --> FL4
    FL4 --> FL5
    FL5 --> FL6
    FL5 --> FL7
    FL6 --> FL8
    FL7 --> FL8
    FL8 --> FL9
    FL9 --> FL10
    FL10 --> FL11
    FL11 --> FL12
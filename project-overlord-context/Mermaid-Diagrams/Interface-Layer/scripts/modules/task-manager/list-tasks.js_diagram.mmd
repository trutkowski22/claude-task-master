flowchart TB
    subgraph Imports["Imports"]
        I1["IMPORT: chalk, FROM: chalk"]
        I2["IMPORT: boxen, FROM: boxen"]
        I3["IMPORT: Table, FROM: cli-table3"]
        I4["IMPORT: log, FROM: /claude-task-master/scripts/modules/utils.js"]
        I5["IMPORT: findNextTask, FROM: /claude-task-master/scripts/modules/task-manager/find-next-task.js"]
        I6["IMPORT: displayBanner, FROM: /claude-task-master/scripts/modules/ui.js"]
    end
    
    subgraph Dependencies["Dependencies"]
        D1["DEP: Terminal UI and table formatting libraries"]
        D2["DEP: File system for reading tasks and complexity reports"]
        D3["DEP: Task analysis and recommendation system"]
    end
    
    subgraph FunctionsDefined["Functions Defined"]
        FU1["FUNCTION: listTasks"]
        FU2["FUNCTION: getWorkItemDescription"]
        FU3["FUNCTION: generateMarkdownOutput"]
    end
    
    subgraph Exports["Exports"]
        E1["EXP: listTasks"]
    end
    
    subgraph Parameters["Parameters"]
        P1["PARAM: {string} tasksPath - Path to the tasks.json file"]
        P2["PARAM: {string} statusFilter - Filter by status (single or comma-separated)"]
        P3["PARAM: {string} reportPath - Path to the complexity report"]
        P4["PARAM: {boolean} withSubtasks - Whether to show subtasks"]
        P5["PARAM: {string} outputFormat - Output format (text, json, or markdown-readme)"]
        P6["PARAM: {Object} context - Context object with projectRoot and tag"]
    end
    
    subgraph Constants["Const Declarations"]
        C1["CONST: data, VALUE: loaded tasks data from JSON file"]
        C2["CONST: complexityReport, VALUE: task complexity analysis data"]
        C3["CONST: filteredTasks, VALUE: tasks filtered by status criteria"]
        C4["CONST: totalTasks, VALUE: count of all tasks in the dataset"]
        C5["CONST: completionPercentage, VALUE: percentage of completed tasks"]
        C6["CONST: nextItem, VALUE: recommended next task to work on"]
        C7["CONST: table, VALUE: formatted CLI table for task display"]
        C8["CONST: terminalWidth, VALUE: width of terminal for responsive layout"]
    end
    
    subgraph ExecutionFlow["Execution Flow"]
        FL1["Load tasks data from file system using provided context"]
        FL2["Load and apply complexity scores to tasks if report exists"]
        FL3["Filter tasks by status criteria (supports comma-separated list)"]
        FL4["Calculate comprehensive statistics for tasks and subtasks"]
        FL5["Analyze dependency relationships and identify blockers"]
        FL6["Find next recommended task using intelligent algorithm"]
        FL7["Format output based on requested format (text/json/markdown)"]
        FL8["For text output create responsive dashboard with progress bars"]
        FL9["Display formatted table with tasks, dependencies, and complexity"]
        FL10["Show next task recommendation with actionable commands"]
        FL11["Provide suggested next steps for user workflow"]
    end
    
    subgraph listTasksJS["list-tasks.js"]
        Imports
        Dependencies
        FunctionsDefined
        Exports
        Parameters
        Constants
        ExecutionFlow
    end
    
    FL1 --> FL2
    FL2 --> FL3
    FL3 --> FL4
    FL4 --> FL5
    FL5 --> FL6
    FL6 --> FL7
    FL7 --> FL8
    FL8 --> FL9
    FL9 --> FL10
    FL10 --> FL11
```mermaid
flowchart TB
    subgraph Imports["Imports"]
        I1["IMPORT: removeSubtask, FROM: G:\claude-task-master\claude-task-master\scripts\modules\task-manager.js"]
        I2["IMPORT: enableSilentMode, FROM: G:\claude-task-master\claude-task-master\scripts\modules\utils.js"]
        I3["IMPORT: disableSilentMode, FROM: G:\claude-task-master\claude-task-master\scripts\modules\utils.js"]
    end
    
    subgraph FunctionsDefined["Functions Defined"]
        FU1["FUNCTION: removeSubtaskDirect"]
    end
    
    subgraph Exports["Exports"]
        E1["EXP: removeSubtaskDirect"]
    end
    
    subgraph Parameters["Parameters"]
        P1["PARAM: {Object} args - Function arguments"]
        P2["PARAM: {string} args.tasksJsonPath - Explicit path to the tasks.json file"]
        P3["PARAM: {string} args.id - Subtask ID in format parentId.subtaskId (required)"]
        P4["PARAM: {boolean} args.convert - Whether to convert the subtask to a standalone task"]
        P5["PARAM: {boolean} args.skipGenerate - Skip regenerating task files"]
        P6["PARAM: {string} args.projectRoot - Project root path for MCP/env fallback"]
        P7["PARAM: {string} args.tag - Tag for the task (optional)"]
        P8["PARAM: {Object} log - Logger object"]
    end
    
    subgraph Constants["Const Declarations"]
        C1["CONST: tasksJsonPath, VALUE: extracted from args"]
        C2["CONST: id, VALUE: extracted from args"]
        C3["CONST: convert, VALUE: extracted from args"]
        C4["CONST: skipGenerate, VALUE: extracted from args"]
        C5["CONST: projectRoot, VALUE: extracted from args"]
        C6["CONST: tag, VALUE: extracted from args"]
        C7["CONST: tasksPath, VALUE: provided tasksJsonPath"]
        C8["CONST: convertToTask, VALUE: boolean conversion of convert parameter"]
        C9["CONST: generateFiles, VALUE: negation of skipGenerate parameter"]
        C10["CONST: result, VALUE: removeSubtask function call result"]
    end
    
    subgraph ExecutionFlow["Execution Flow"]
        FL1["Enable silent mode to prevent console interference"]
        FL2["Extract and validate required parameters from args"]
        FL3["Validate subtask ID format contains dot separator"]
        FL4["Convert parameters to appropriate boolean values"]
        FL5["Call core removeSubtask function with proper options"]
        FL6["Restore normal logging mode"]
        FL7["Return success response with conversion or deletion confirmation"]
    end
    
    subgraph removeSubtask["remove-subtask.js"]
        Imports
        FunctionsDefined
        Exports
        Parameters
        Constants
        ExecutionFlow
    end
    
    FL1 --> FL2
    FL2 --> FL3
    FL3 --> FL4
    FL4 --> FL5
    FL5 --> FL6
    FL6 --> FL7
```
```mermaid
flowchart TB
    subgraph Imports["Imports"]
        I1["IMPORT: ../utils.js, FROM: /claude-task-master/scripts/modules/utils.js"]
        I2["IMPORT: ./expand-task.js, FROM: /claude-task-master/scripts/modules/task-manager/expand-task.js"]
        I3["IMPORT: ../config-manager.js, FROM: /claude-task-master/scripts/modules/config-manager.js"]
        I4["IMPORT: ../utils.js, FROM: /claude-task-master/scripts/modules/utils.js"]
        I5["IMPORT: chalk, FROM: chalk"]
        I6["IMPORT: boxen, FROM: boxen"]
    end
    subgraph Dependencies["Dependencies"]
        D1["DEP: Path resolution"]
    end
    subgraph FunctionsDefined["Functions Defined"]
        FU1["FUNCTION: expandAllTasks"]
    end
    subgraph Exports["Exports"]
        E1["EXP: expandAllTasks"]
    end
    subgraph Parameters["Parameters"]
        P1["PARAM: {string} tasksPath - Path to the tasks.json file"]
        P2["PARAM: {number} [numSubtasks] - Optional: Target number of subtasks per task."]
        P3["PARAM: {Object} context - Context object containing session and mcpLog."]
        P4["PARAM: {Object} [context.session] - Session object from MCP."]
        P5["PARAM: {Object} [context.mcpLog] - MCP logger object."]
        P6["PARAM: {string} [context.projectRoot] - Project root path"]
        P7["PARAM: {string} [context.tag] - Tag for the task"]
        P8["PARAM: {string} [context.complexityReportPath] - Path to the complexity report file"]
    end
    subgraph Constants["Const Declarations"]
        C1["CONST: isMCPCall, VALUE: !!mcpLog"]
        C2["CONST: projectRoot, VALUE: providedProjectRoot || findProjectRoot()"]
        C3["CONST: logger, VALUE: mcpLog ||"]
        C4["CONST: allTelemetryData, VALUE: []"]
        C5["CONST: data, VALUE: readJSON(tasksPath, projectRoot, tag)"]
        C6["CONST: tasksToExpand, VALUE: data.tasks.filter("]
        C7["CONST: result, VALUE: await expandTask("]
        C8["CONST: aggregatedTelemetryData, VALUE: aggregateTelemetry("]
        C9["CONST: summaryContent, VALUE: `${chalk.white.bold('Expansion Summary:')}\\n\\n` +"]
    end
    subgraph ExecutionFlow["Execution Flow"]
        FL1["Identify and load dependencies and modules"]
        FL2["Define functions and core logic for this module"]
        FL3["Expose public API via exports"]
    end
    subgraph FileName["expand-all-tasks.js"]
        Imports
        Dependencies
        FunctionsDefined
        Exports
        Parameters
        Constants
        ExecutionFlow
    end
    FL1 --> FL2
    FL2 --> FL3
```
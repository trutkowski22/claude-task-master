```mermaid
flowchart TB
    subgraph Imports["Imports"]
        I1["IMPORT: path, FROM: path"]
        I2["IMPORT: ../../../../scripts/modules/task-manager.js, FROM: /claude-task-master/scripts/modules/task-manager.js"]
        I3["IMPORT: ../../tools/utils.js, FROM: /claude-task-master/mcp-server/src/tools/utils.js"]
    end
    subgraph Dependencies["Dependencies"]
        D1["DEP: Path resolution"]
    end
    subgraph FunctionsDefined["Functions Defined"]
        FU1["FUNCTION: researchDirect"]
    end
    subgraph Parameters["Parameters"]
        P1["PARAM: {Object} args - Command arguments"]
        P2["PARAM: {string} args.query - Research query/prompt (required)"]
        P3["PARAM: {string} [args.taskIds] - Comma-separated list of task/subtask IDs for context"]
        P4["PARAM: {string} [args.filePaths] - Comma-separated list of file paths for context"]
        P5["PARAM: {string} [args.customContext] - Additional custom context text"]
        P6["PARAM: {string} [args.saveTo] - Automatically save to task/subtask ID (e.g., \"15\" or \"15.2\")"]
        P7["PARAM: {string} [args.projectRoot] - Project root path"]
        P8["PARAM: {string} [args.tag] - Tag for the task (optional)"]
        P9["PARAM: {Object} log - Logger object"]
        P10["PARAM: {Object} context - Additional context (session)"]
    end
    subgraph Constants["Const Declarations"]
        C1["CONST: mcpLog, VALUE: createLogWrapper(log)"]
        C2["CONST: parsedTaskIds, VALUE: taskIds"]
        C3["CONST: parsedFilePaths, VALUE: filePaths"]
        C4["CONST: validDetailLevels, VALUE: ['low', 'medium', 'high']"]
        C5["CONST: researchOptions, VALUE: {"]
        C6["CONST: researchContext, VALUE: {"]
        C7["CONST: result, VALUE: await performResearch("]
        C8["CONST: isSubtask, VALUE: saveTo.includes('.')"]
        C9["CONST: researchContent, VALUE: `## Research Query: ${query.trim()}"]
        C10["CONST: tasksPath, VALUE: path.join("]
        C11["CONST: updateTaskById, VALUE: ("]
        C12["CONST: taskIdNum, VALUE: parseInt(saveTo, 10)"]
        C13["CONST: tasksPath, VALUE: path.join("]
    end
    subgraph ExecutionFlow["Execution Flow"]
        FL1["Identify and load dependencies and modules"]
        FL2["Define functions and core logic for this module"]
    end
    subgraph FileName["research.js"]
        Imports
        Dependencies
        FunctionsDefined
        Parameters
        Constants
        ExecutionFlow
    end
    FL1 --> FL2
```
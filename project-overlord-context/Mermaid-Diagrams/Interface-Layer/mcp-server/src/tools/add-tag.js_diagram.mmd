flowchart TB
    subgraph Imports["Imports"]
        I1["IMPORT: z, FROM: zod"]
        I2["IMPORT: createErrorResponse, FROM: ./utils.js"]
        I3["IMPORT: handleApiResult, FROM: ./utils.js"]
        I4["IMPORT: withNormalizedProjectRoot, FROM: ./utils.js"]
        I5["IMPORT: addTagDirect, FROM: ../core/task-master-core.js"]
        I6["IMPORT: findTasksPath, FROM: ../core/utils/path-utils.js"]
    end
    
    subgraph Dependencies["Dependencies"]
        D1["DEP: FastMCP server framework for MCP tool registration"]
        D2["DEP: Zod validation library for parameter schema validation"]
    end
    
    subgraph FunctionsDefined["Functions Defined"]
        FU1["FUNCTION: registerAddTagTool"]
    end
    
    subgraph Exports["Exports"]
        E1["EXP: registerAddTagTool"]
    end
    
    subgraph Parameters["Parameters"]
        P1["PARAM: {Object} server - FastMCP server instance"]
    end
    
    subgraph Constants["Const Declarations"]
        C1["CONST: tasksJsonPath, VALUE: findTasksPath result"]
        C2["CONST: result, VALUE: await addTagDirect"]
    end
    
    subgraph ExecutionFlow["Execution Flow"]
        FL1["Register tool with server using name and description"]
        FL2["Define parameter schema for tag creation options"]
        FL3["Wrap execute function with normalized project root"]
        FL4["Find tasks.json path in project structure"]
        FL5["Call direct function to create new tag with options"]
        FL6["Handle result and format response for MCP client"]
    end
    
    subgraph addTag["add-tag.js"]
        Imports
        Dependencies
        FunctionsDefined
        Exports
        Parameters
        Constants
        ExecutionFlow
    end
    
    FL1 --> FL2
    FL2 --> FL3
    FL3 --> FL4
    FL4 --> FL5
    FL5 --> FL6
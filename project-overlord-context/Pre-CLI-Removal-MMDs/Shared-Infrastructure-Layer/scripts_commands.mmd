flowchart TB
    subgraph ["commands-Imports"]
        I1["IMPORT: program, FROM: commander"]
        I2["IMPORT: path, FROM: path"]
        I3["IMPORT: chalk, FROM: chalk"]
        I4["IMPORT: boxen, FROM: boxen"]
        I5["IMPORT: fs, FROM: fs"]
        I6["IMPORT: https, FROM: https"]
        I7["IMPORT: http, FROM: http"]
        I8["IMPORT: inquirer, FROM: inquirer"]
        I9["IMPORT: search, FROM: @inquirer/search"]
        I10["IMPORT: ora, FROM: ora"]
        I11["IMPORT: log, readJSON, writeJSON, getCurrentTag, detectCamelCaseFlags, toKebabCase, FROM: /claude-task-master/scripts/modules/utils.js"]
        I12["IMPORT: parsePRD, updateTasks, generateTaskFiles, setTaskStatus, listTasks, expandTask, expandAllTasks, clearSubtasks, addTask, addSubtask, removeSubtask, analyzeTaskComplexity, updateTaskById, updateSubtaskById, removeTask, findTaskById, taskExists, moveTask, migrateProject, setResponseLanguage, scopeUpTask, scopeDownTask, validateStrength, FROM: /claude-task-master/scripts/modules/task-manager.js"]
        I13["IMPORT: createTag, deleteTag, tags, useTag, renameTag, copyTag, FROM: /claude-task-master/scripts/modules/task-manager/tag-management.js"]
        I14["IMPORT: addDependency, removeDependency, validateDependenciesCommand, fixDependenciesCommand, FROM: /claude-task-master/scripts/modules/dependency-manager.js"]
        I15["IMPORT: isApiKeySet, getDebugFlag, getConfig, writeConfig, ConfigurationError, isConfigFilePresent, getAvailableModels, getBaseUrlForRole, getDefaultNumTasks, getDefaultSubtasks, FROM: /claude-task-master/scripts/modules/config-manager.js"]
        I16["IMPORT: CUSTOM_PROVIDERS, FROM: /claude-task-master/src/constants/providers.js"]
        I17["IMPORT: COMPLEXITY_REPORT_FILE, TASKMASTER_TASKS_FILE, TASKMASTER_DOCS_DIR, FROM: /claude-task-master/src/constants/paths.js"]
        I18["IMPORT: initTaskMaster, FROM: /claude-task-master/src/task-master.js"]
        I19["IMPORT: displayBanner, displayHelp, displayNextTask, displayTaskById, displayComplexityReport, getStatusWithColor, confirmTaskOverwrite, startLoadingIndicator, stopLoadingIndicator, displayModelConfiguration, displayAvailableModels, displayApiKeyStatus, displayAiUsageSummary, displayMultipleTasksSummary, displayTaggedTasksFYI, displayCurrentTagIndicator, FROM: /claude-task-master/scripts/modules/ui.js"]
        I20["IMPORT: confirmProfilesRemove, confirmRemoveAllRemainingProfiles, FROM: /claude-task-master/src/ui/confirm.js"]
        I21["IMPORT: wouldRemovalLeaveNoProfiles, getInstalledProfiles, FROM: /claude-task-master/src/utils/profiles.js"]
        I22["IMPORT: initializeProject, FROM: /claude-task-master/scripts/init.js"]
        I23["IMPORT: getModelConfiguration, getAvailableModelsList, setModel, getApiKeyStatusReport, FROM: /claude-task-master/scripts/modules/task-manager/models.js"]
        I24["IMPORT: isValidTaskStatus, TASK_STATUS_OPTIONS, FROM: /claude-task-master/src/constants/task-status.js"]
        I25["IMPORT: isValidRulesAction, RULES_ACTIONS, RULES_SETUP_ACTION, FROM: /claude-task-master/src/constants/rules-actions.js"]
        I26["IMPORT: getTaskMasterVersion, FROM: /claude-task-master/src/utils/getVersion.js"]
        I27["IMPORT: syncTasksToReadme, FROM: /claude-task-master/scripts/modules/sync-readme.js"]
        I28["IMPORT: RULE_PROFILES, FROM: /claude-task-master/src/constants/profiles.js"]
        I29["IMPORT: convertAllRulesToProfileRules, removeProfileRules, isValidProfile, getRulesProfile, FROM: /claude-task-master/src/utils/rule-transformer.js"]
        I30["IMPORT: runInteractiveProfilesSetup, generateProfileSummary, categorizeProfileResults, generateProfileRemovalSummary, categorizeRemovalResults, FROM: /claude-task-master/src/utils/profiles.js"]
    end
    subgraph ["commands-Dependencies"]
        D1["DEP: Commander.js CLI framework"]
        D2["DEP: Node.js built-in modules (path, fs, https, http)"]
        D3["DEP: Console UI libraries (chalk, boxen, ora)"]
        D4["DEP: Interactive prompts (inquirer)"]
        D5["DEP: Task Master core system"]
        D6["DEP: Configuration management"]
        D7["DEP: File system operations"]
    end
    subgraph ["commands-FunctionsDefined"]
        FU1["FUNCTION: runInteractiveSetup"]
        FU2["FUNCTION: registerCommands"]
        FU3["FUNCTION: setupCLI"]
        FU4["FUNCTION: checkForUpdate"]
        FU5["FUNCTION: compareVersions"]
        FU6["FUNCTION: displayUpgradeNotification"]
        FU7["FUNCTION: runCLI"]
        FU8["FUNCTION: resolveComplexityReportPath"]
    end
    subgraph ["commands-Exports"]
        E1["EXP: registerCommands"]
        E2["EXP: setupCLI"]
        E3["EXP: runCLI"]
        E4["EXP: checkForUpdate"]
        E5["EXP: compareVersions"]
        E6["EXP: displayUpgradeNotification"]
        E7["EXP: resolveComplexityReportPath"]
    end
    subgraph ["commands-Parameters"]
        P1["PARAM: {string|null} projectRoot - The resolved project root directory"]
        P2["PARAM: {Object} program - Commander program instance"]
        P3["PARAM: {string} v1 - First version"]
        P4["PARAM: {string} v2 - Second version"]
        P5["PARAM: {string} currentVersion - Current version"]
        P6["PARAM: {string} latestVersion - Latest version"]
        P7["PARAM: {Array} argv - Command-line arguments"]
        P8["PARAM: {string|undefined} outputOpt - --output value from CLI"]
        P9["PARAM: {string} targetTag - resolved tag"]
        P10["PARAM: {string} projectRoot - absolute project root"]
    end
    subgraph ["commands-ExecutionFlow"]
        FL1["Initialize CLI with Commander.js program instance"]
        FL2["Run interactive setup for project configuration"]
        FL3["Register all command handlers with their options and descriptions"]
        FL4["Set up CLI with command registration and global options"]
        FL5["Check for updates by comparing current and latest versions"]
        FL6["Display upgrade notifications when new versions available"]
        FL7["Run main CLI with argument parsing and command execution"]
        FL8["Handle error cases and display appropriate messages"]
        FL9["Resolve complexity report paths with tag-specific naming"]
        FL10["Export core CLI functions for external usage"]
    end
    subgraph ["commands.js"]
        ["commands-Imports"]
        ["commands-Dependencies"]
        ["commands-FunctionsDefined"]
        ["commands-Exports"]
        ["commands-Parameters"]
        ["commands-ExecutionFlow"]
    end
    FL1 --> FL2
    FL2 --> FL3
    FL3 --> FL4
    FL4 --> FL5
    FL5 --> FL6
    FL6 --> FL7
    FL7 --> FL8
    FL8 --> FL9
    FL9 --> FL10
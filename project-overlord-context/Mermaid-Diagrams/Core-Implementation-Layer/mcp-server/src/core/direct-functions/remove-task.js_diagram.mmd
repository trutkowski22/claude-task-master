```mermaid
flowchart TB
    subgraph Imports["Imports"]
        I1["IMPORT: removeTask, FROM: G:\claude-task-master\claude-task-master\scripts\modules\task-manager.js"]
        I2["IMPORT: taskExists, FROM: G:\claude-task-master\claude-task-master\scripts\modules\task-manager.js"]
        I3["IMPORT: enableSilentMode, FROM: G:\claude-task-master\claude-task-master\scripts\modules\utils.js"]
        I4["IMPORT: disableSilentMode, FROM: G:\claude-task-master\claude-task-master\scripts\modules\utils.js"]
        I5["IMPORT: readJSON, FROM: G:\claude-task-master\claude-task-master\scripts\modules\utils.js"]
    end
    
    subgraph FunctionsDefined["Functions Defined"]
        FU1["FUNCTION: removeTaskDirect"]
    end
    
    subgraph Exports["Exports"]
        E1["EXP: removeTaskDirect"]
    end
    
    subgraph Parameters["Parameters"]
        P1["PARAM: {Object} args - Command arguments"]
        P2["PARAM: {string} args.tasksJsonPath - Explicit path to the tasks.json file"]
        P3["PARAM: {string} args.id - The task or subtask IDs to remove (comma-separated for multiple)"]
        P4["PARAM: {string} args.projectRoot - Project root path for MCP/env fallback"]
        P5["PARAM: {string} args.tag - Tag for the task (optional)"]
        P6["PARAM: {Object} log - Logger object"]
    end
    
    subgraph Constants["Const Declarations"]
        C1["CONST: tasksJsonPath, VALUE: extracted from args"]
        C2["CONST: id, VALUE: extracted from args"]
        C3["CONST: projectRoot, VALUE: extracted from args"]
        C4["CONST: tag, VALUE: extracted from args"]
        C5["CONST: session, VALUE: extracted from context"]
        C6["CONST: taskIdArray, VALUE: split and trimmed comma-separated task IDs"]
        C7["CONST: data, VALUE: readJSON result from tasks file"]
        C8["CONST: invalidTasks, VALUE: filtered list of non-existent task IDs"]
        C9["CONST: result, VALUE: removeTask function call result"]
    end
    
    subgraph ExecutionFlow["Execution Flow"]
        FL1["Extract required parameters and validate tasksJsonPath"]
        FL2["Validate task ID parameter is provided"]
        FL3["Split comma-separated task IDs into array"]
        FL4["Read tasks file and validate task existence"]
        FL5["Check all task IDs exist before proceeding with removal"]
        FL6["Enable silent mode to prevent console interference"]
        FL7["Call core removeTask function with proper context"]
        FL8["Restore normal logging and return detailed success response"]
    end
    
    subgraph removeTask["remove-task.js"]
        Imports
        FunctionsDefined
        Exports
        Parameters
        Constants
        ExecutionFlow
    end
    
    FL1 --> FL2
    FL2 --> FL3
    FL3 --> FL4
    FL4 --> FL5
    FL5 --> FL6
    FL6 --> FL7
    FL7 --> FL8
```
```mermaid
flowchart TB
    subgraph Imports["Imports"]
        I1["IMPORT: chalk, FROM: chalk"]
        I2["IMPORT: ../utils.js, FROM: /claude-task-master/scripts/modules/utils.js"]
        I3["IMPORT: ../../../src/constants/task-status.js, FROM: /claude-task-master/src/constants/task-status.js"]
    end
    subgraph FunctionsDefined["Functions Defined"]
        FU1["FUNCTION: updateSingleTaskStatus"]
    end
    subgraph Exports["Exports"]
        E1["EXP: updateSingleTaskStatus"]
    end
    subgraph Parameters["Parameters"]
        P1["PARAM: {string} tasksPath - Path to the tasks.json file"]
        P2["PARAM: {string} taskIdInput - Task ID to update"]
        P3["PARAM: {string} newStatus - New status"]
        P4["PARAM: {Object} data - Tasks data"]
        P5["PARAM: {boolean} showUi - Whether to show UI elements"]
    end
    subgraph Constants["Const Declarations"]
        C1["CONST: parentTask, VALUE: data.tasks.find((t) => t.id === parentId)"]
        C2["CONST: subtask, VALUE: parentTask.subtasks.find((st) => st.id === subtaskId)"]
        C3["CONST: oldStatus, VALUE: subtask.status || 'pending'"]
        C4["CONST: allSubtasksDone, VALUE: parentTask.subtasks.every("]
        C5["CONST: taskId, VALUE: parseInt(taskIdInput, 10)"]
        C6["CONST: task, VALUE: data.tasks.find((t) => t.id === taskId)"]
        C7["CONST: oldStatus, VALUE: task.status || 'pending'"]
        C8["CONST: pendingSubtasks, VALUE: task.subtasks.filter("]
    end
    subgraph ExecutionFlow["Execution Flow"]
        FL1["Identify and load dependencies and modules"]
        FL2["Define functions and core logic for this module"]
        FL3["Expose public API via exports"]
    end
    subgraph FileName["update-single-task-status.js"]
        Imports
        FunctionsDefined
        Exports
        Parameters
        Constants
        ExecutionFlow
    end
    FL1 --> FL2
    FL2 --> FL3
```
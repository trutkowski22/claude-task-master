flowchart TB
    subgraph scopeDownImports["direct-functions_scope-down-Imports"]
        I1["IMPORT: scopeDownTask, FROM: /claude-task-master/scripts/modules/task-manager.js"]
        I2["IMPORT: enableSilentMode, FROM: /claude-task-master/scripts/modules/utils.js"]
        I3["IMPORT: disableSilentMode, FROM: /claude-task-master/scripts/modules/utils.js"]
        I4["IMPORT: createLogWrapper, FROM: /claude-task-master/mcp-server/src/tools/utils.js"]
    end
    
    subgraph scopeDownDependencies["direct-functions_scope-down-Dependencies"]
        D1["DEP: FastMCP"]
        D2["DEP: File system"]
        D3["DEP: AI task modification capabilities"]
    end
    
    subgraph scopeDownFunctionsDefined["direct-functions_scope-down-Functions Defined"]
        FU1["FUNCTION: scopeDownDirect"]
    end
    
    subgraph scopeDownExports["direct-functions_scope-down-Exports"]
        E1["EXP: scopeDownDirect"]
    end
    
    subgraph scopeDownParameters["direct-functions_scope-down-Parameters"]
        P1["PARAM: {Object} args - Function arguments"]
        P2["PARAM: {string} args.id - Comma-separated list of task IDs to scope down"]
        P3["PARAM: {string} args.strength - Strength level (light, regular, heavy)"]
        P4["PARAM: {string} args.prompt - Custom prompt for scoping adjustments"]
        P5["PARAM: {string} args.tasksJsonPath - Path to the tasks.json file"]
        P6["PARAM: {boolean} args.research - Whether to use research capabilities"]
        P7["PARAM: {string} args.projectRoot - Project root path"]
        P8["PARAM: {string} args.tag - Tag for the task context (optional)"]
        P9["PARAM: {Object} log - Logger object"]
        P10["PARAM: {Object} context - Additional context containing session"]
    end
    
    subgraph scopeDownConstants["direct-functions_scope-down-Const Declarations"]
        C1["CONST: tasksJsonPath, VALUE: extracted from args"]
        C2["CONST: id, VALUE: extracted from args"]
        C3["CONST: strength, VALUE: extracted from args (default regular)"]
        C4["CONST: customPrompt, VALUE: extracted from args.prompt"]
        C5["CONST: research, VALUE: extracted from args (default false)"]
        C6["CONST: projectRoot, VALUE: extracted from args"]
        C7["CONST: tag, VALUE: extracted from args"]
        C8["CONST: session, VALUE: extracted from context"]
        C9["CONST: mcpLog, VALUE: createLogWrapper result"]
        C10["CONST: taskIds, VALUE: parsed integer array from comma-separated IDs"]
        C11["CONST: result, VALUE: scopeDownTask execution result"]
    end
    
    subgraph scopeDownExecutionFlow["direct-functions_scope-down-Execution Flow"]
        FL1["Destructure function arguments and extract session from context"]
        FL2["Enable silent mode to suppress console output"]
        FL3["Create MCP logger wrapper for consistent logging interface"]
        FL4["Validate required tasksJsonPath parameter is provided"]
        FL5["Validate required id parameter is provided"]
        FL6["Parse comma-separated task IDs and convert to integers"]
        FL7["Log the scope down operation details"]
        FL8["Call core scopeDownTask function with formatted parameters and JSON output"]
        FL9["Disable silent mode to restore normal output"]
        FL10["Return successful result with updated tasks and telemetry data"]
        FL11["Handle errors and ensure silent mode is disabled in catch block"]
    end
    
    subgraph scopeDown["direct-functions_scope-down.js"]
        scopeDownImports
        scopeDownDependencies
        scopeDownFunctionsDefined
        scopeDownExports
        scopeDownParameters
        scopeDownConstants
        scopeDownExecutionFlow
    end
    
    FL1 --> FL2
    FL2 --> FL3
    FL3 --> FL4
    FL4 --> FL5
    FL5 --> FL6
    FL6 --> FL7
    FL7 --> FL8
    FL8 --> FL9
    FL9 --> FL10
    FL10 --> FL11
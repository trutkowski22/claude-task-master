flowchart TB
    subgraph updateSingleTaskStatus-Imports["updateSingleTaskStatus-Imports"]
        I1["IMPORT: chalk, FROM: chalk"]
        I2["IMPORT: log, FROM: /claude-task-master/scripts/modules/utils.js"]
        I3["IMPORT: isValidTaskStatus, FROM: /claude-task-master/src/constants/task-status.js"]
    end
    subgraph updateSingleTaskStatus-FunctionsDefined["updateSingleTaskStatus-Functions Defined"]
        FU1["FUNCTION: updateSingleTaskStatus"]
    end
    subgraph updateSingleTaskStatus-Exports["updateSingleTaskStatus-Exports"]
        E1["EXP: updateSingleTaskStatus"]
    end
    subgraph updateSingleTaskStatus-Parameters["updateSingleTaskStatus-Parameters"]
        P1["PARAM: {string} tasksPath - Path to the tasks.json file"]
        P2["PARAM: {string} taskIdInput - Task ID to update"]
        P3["PARAM: {string} newStatus - New status"]
        P4["PARAM: {Object} data - Tasks data"]
        P5["PARAM: {boolean} showUi - Whether to show UI elements"]
    end
    subgraph updateSingleTaskStatus-Constants["updateSingleTaskStatus-Const Declarations"]
        C1["CONST: [parentId, subtaskId], VALUE: taskIdInput.split('.').map((id) => parseInt(id, 10))"]
        C2["CONST: parentTask, VALUE: data.tasks.find((t) => t.id === parentId)"]
        C3["CONST: subtask, VALUE: parentTask.subtasks.find((st) => st.id === subtaskId)"]
        C4["CONST: oldStatus, VALUE: subtask.status || 'pending'"]
        C5["CONST: allSubtasksDone, VALUE: parentTask.subtasks.every((st) => st.status === 'done' || st.status === 'completed')"]
        C6["CONST: taskId, VALUE: parseInt(taskIdInput, 10)"]
        C7["CONST: task, VALUE: data.tasks.find((t) => t.id === taskId)"]
        C8["CONST: pendingSubtasks, VALUE: task.subtasks.filter((st) => st.status !== 'done' && st.status !== 'completed')"]
    end
    subgraph updateSingleTaskStatus-ExecutionFlow["updateSingleTaskStatus-Execution Flow"]
        FL1["Validate new status using isValidTaskStatus"]
        FL2["Check if taskIdInput contains dot (subtask format)"]
        FL3["Parse parent and subtask IDs from dot-separated string"]
        FL4["Find parent task in data.tasks array"]
        FL5["Validate parent task exists and has subtasks"]
        FL6["Find specific subtask within parent task"]
        FL7["Update subtask status and log the change"]
        FL8["Check if all subtasks are done when marking subtask complete"]
        FL9["Show suggestion to update parent task if all subtasks done"]
        FL10["For regular tasks, parse task ID and find task"]
        FL11["Update main task status and log the change"]
        FL12["If marking task done, check for pending subtasks"]
        FL13["Mark all pending subtasks as done when parent is done"]
    end
    subgraph updateSingleTaskStatus["update-single-task-status.js"]
        updateSingleTaskStatus-Imports
        updateSingleTaskStatus-FunctionsDefined
        updateSingleTaskStatus-Exports
        updateSingleTaskStatus-Parameters
        updateSingleTaskStatus-Constants
        updateSingleTaskStatus-ExecutionFlow
    end
    FL1 --> FL2
    FL2 --> FL3
    FL3 --> FL4
    FL4 --> FL5
    FL5 --> FL6
    FL6 --> FL7
    FL7 --> FL8
    FL8 --> FL9
    FL9 --> FL10
    FL10 --> FL11
    FL11 --> FL12
    FL12 --> FL13